#!/bin/sh

# sspm - shell script package manager
# Copyright (c) 2018, Maksim Pinigin

function package_check {
	wget -q --spider $REPO/index/$1
	if [ $? = 0 ]; then
		if [ $2 = 1 ]; then
			echo "Package $1 exists."
			DEPS=$(wget -q -O - $REPO/dependencies/$1)
			echo "Dependencies: $DEPS"
			return 0
		else
			return 0
		fi
	else
		if [ $2 = 1 ]; then
			echo "Package $1 is not exists."
			return 1
		else
			return 1
		fi
	fi
}

function package_download {
	printf "Downloading $REPO/index/$1... "
	wget -q -P /tmp $REPO/index/$1
	if [ $? != 0 ]; then
		echo "Error while downloading $1, exit."
		exit 200
	else
		echo "done"
	fi
}

function package_verify {
	printf "Verifying $1... "
	cd /tmp
	CHECKSUM=$(wget -q -O - $REPO/checksums/$1)
	NOWSUM=$(sha256sum $1)
	if [ "$NOWSUM" = "$CHECKSUM" ]; then
		echo "ok"
		return 0
	else
		echo "error"
		echo "Legally: $CHECKSUM"
		echo "Actually: $NOWSUM"
		printf "Checksums do not match, anyway continue? (DANGEROUSLY) [y/N] "
		read answer
		if [[ -z $answer ]] || ! [[ $answer = "y" ]]; then
			echo "Abort."
			for p in $PKGSTOINSTALL; do
				rm /tmp/$p
			done
			exit 8
		fi
	fi
}

function package_install {
	printf "Installing $1... "
	if [ -f /tmp/$1 ]; then
		tar -xf /tmp/$1 -C /
		if [ $? = 0 ]; then
			INSTALLEDPKGS=$(cat /etc/sspm/installed)
			if [ -z "$INSTALLEDPKGS" ]; then
				echo "$1" > /etc/sspm/installed
			else
				echo "$INSTALLEDPKGS $1" > /etc/sspm/installed
			fi
			echo "ok"
			return 0
		else
			echo "error"
			echo "Error."
			exit 8
		fi
	else
		echo "error"
		echo "Package $1 does not exist on your computer, exit."
		exit 7
	fi
}

function package_all {
	package_check $1 0
	if [ $? = 1 ]; then
		echo "Package $1 is not exists."
		exit 3
	fi
	
	DEPS=$(wget -q -O - $REPO/dependencies/$1)
	PKGWITHDEPS="$DEPS $1"
	if [ -f /etc/sspm/installed ]; then
		touch /etc/sspm/installed
	fi
	
	INSTALLEDPKGS=$(cat /etc/sspm/installed)
	for d in $PKGWITHDEPS; do
		installed_check $d
		if [ $? = 1 ]; then
			if [ -z "$PKGSTOINSTALL" ]; then
				PKGSTOINSTALL="$d"
			else
				PKGSTOINSTALL="$PKGSTOINSTALL $d"
			fi
		fi
	done
	
	if [ -z "$PKGSTOINSTALL" ]; then
		echo "Nothing to do."
		exit 9
	fi
	
	echo "The following packages will be installed:"
	echo "  $PKGSTOINSTALL"
	printf "Continue? [Y/n] "
	read answer
	if ! [[ -z $answer ]] && ! [[ $answer = "y" ]]; then
		echo "Abort."
		exit 8
	fi
	
	# Downloading packages
	for p in $PKGSTOINSTALL; do
		package_download $p
	done
	
	# Verifying packages
	for p in $PKGSTOINSTALL; do
		package_verify $p
		if [ $? = 1 ]; then
			for tp in $PKGSTOINSTALL; do
				rm /tmp/$tp
			done
			exit 6
		fi
	done
	
	# Installing packages
	for p in $PKGSTOINSTALL; do
		package_install $p
	done
	
	# Cleaning
	for p in $PKGSTOINSTALL; do
		rm /tmp/$p
	done
}

function installed_check {
	for i in $INSTALLEDPKGS; do
		if [ $i = $1 ]; then
			return 0
		fi
	done
	return 1
}

function package_checkoninstalled {
	if ! [ -f /etc/sspm/installed ]; then
		touch /etc/sspm/installed
		echo "List of installed packages is not exists, created new."
	fi
	INSTALLEDPKGS=$(cat /etc/sspm/installed)
	for p in $INSTALLEDPKGS; do
		if [ "$p" = "$1" ]; then
			return 0
		fi
	done
	return 1
}

function package_remove {
	printf "Retrieving files list from package $1... "
	wget -q -P /tmp $REPO/index/$1
	FILES=$(tar -tf /tmp/$1)
	echo "done"
	printf "Removing $1... "
	cd /
	for f in $FILES; do
		if [ -e $f ] && ! [ -d $f ]; then
			rm -f $f
		fi
	done
	
	INSTALLEDPKGS=$(sed "s/$1//" /etc/sspm/installed)
	echo "$INSTALLEDPKGS" > /etc/sspm/installed
	
	FIRSTWORD=$(cut -c-1 /etc/sspm/installed)
	if [ "$FIRSTWORD" = " " ]; then
		INSTALLEDPKGS=$(cut -c2- /etc/sspm/installed)
		echo "$INSTALLEDPKGS" > /etc/sspm/installed
	fi
	
	echo "ok"
	
	rm /tmp/$1
}

function package_remove_req {
	package_checkoninstalled $1
	if [ $? != 0 ]; then
		echo "Package $1 is not installed."
		exit 10
	fi
	
	echo "The following packages will be permanently removed:"
	echo "  $1"
	printf "Continue? [Y/n] "
	read answer
	if ! [[ -z $answer ]] && ! [[ $answer = "y" ]]; then
		echo "Abort."
		exit 8
	fi
	
	package_remove $1
}

if [ $USER != "root" ]; then
	echo "You must be root."
	exit 4
fi

if [ -z $1 ]; then
	echo "Usage: $0 ACTION PARAMS..."
	echo ""
	echo "Actions list:"
	echo "  check - check for package existence"
	echo "  install - install package with dependencies"
	echo "  remove - remove package"
	echo ""
	echo "Send bug reports to https://github.com/estintax/sspm"
else
	REPO=$(cat /etc/sspm/repository)
	if [ $? = 1 ]; then
		echo "Please, specify repository in /etc/sspm/repository"
		exit 2
	fi
	if [ $1 = "check" ]; then
		if [ -z $2 ]; then
			echo "Usage: $0 $1 PACKAGE"
		else
			package_check $2 1
		fi
	fi
	if [ $1 = "install" ]; then
		if [ -z $2 ]; then
			echo "Usage: $0 $1 PACKAGE"
		else
			package_all $2
		fi
	fi
	if [ $1 = "remove" ]; then
		if [ -z $2 ]; then
			echo "Usage: $0 $1 PACKAGE"
		else
			package_remove_req $2
		fi
	fi
fi
